apply plugin: 'com.android.application'

/**
 *
 * 获取时间戳
 */
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}
/**
 *
 * 从AndroidManifest.xml中获取版本号
 */
def getVersionNameFromManifest() {
    def manifestParser = new com.android.builder.core.DefaultManifestParser()
    return manifestParser.getVersionName(android.sourceSets.main.manifest.srcFile)
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile files('libs/YoumiSdk_v6.2.0_2016-05-20.jar')
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "shirley.com.sudoku"
        minSdkVersion 10
        targetSdkVersion 23
        versionCode 2
        versionName "1.5"
    }


    /**
     *  忽略编译错误
     */
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    /**
     * 配置签名文件 release＋debug
     */
    signingConfigs {
        debug {
//            keyAlias 'sudoku'
//            keyPassword 'sudokuxia'
//            storeFile file('sudoku.debugkey')
//            storePassword 'sudokuxia'
//
        }
//        release {
//            keyAlias 'sudoku'
//            keyPassword 'sudokuxia'
//            storeFile file('sudoku.releasekey')
//            storePassword 'sudokuxia'
//        }
        release {
            keyAlias 'benyang'
            keyPassword 'itisabenny'
            storeFile file('safetrip.releasekey')
            storePassword 'itisabenny'
        }
    }

    buildTypes {
        /**
         * 配置编译类型
         */
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    /**
     * 配置渠道名称
     */
    productFlavors  {
        update {}
        baidu {}
        android {}
        anzhi {}
        '360' {}
        tengxun {}
        '91' {}
        jifeng {}
        xiaomi {}
        Nduo {}
        appchina {}
        wandoujia {}
        oppo {}
        '10086' {}
        meizu {}
        eoemarket {}
        yiyonghui {}
        huawei {}
        talkphone {}
        google {}
        mumayi {}
        woshangdian {}
        leshangdian {}
        aliyun {}
        samsung {}
        wangyi {}
        taobao {}
        pp {}
        sougou {}
        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }

    /**
     * 批量打包修改生成的apk名字
     */
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def oldFile = output.outputFile
            if (variant.buildType.name.equals('release')) {
                def releaseApkName = 'sudoku_' + getDate() + '_v' + getVersionNameFromManifest() + '_' + variant.productFlavors[0].name + '_release' + '.apk'
                output.outputFile = new File(oldFile.parent, releaseApkName)
            }

            if (variant.buildType.name.equals('debug')) {
                def debugApkName = 'sudoku_' + getDate() + '_v' + getVersionNameFromManifest() + '_' + variant.productFlavors[0].name + '_debug' + '.apk'
                output.outputFile = new File(oldFile.parent, debugApkName)
            }
        }
    }

//    sourceSets {
//        main {
//            manifest.srcFile 'AndroidManifest.xml'
//            java.srcDirs = ['src']
//            resources.srcDirs = ['src']
//            aidl.srcDirs = ['src']
//            renderscript.srcDirs = ['src']
//            res.srcDirs = ['res']
//            jniLibs.srcDirs = ['libs']
//            assets.srcDirs = ['assets']
//        }

//
//        // Move the tests to tests/java, tests/res, etc...
//        instrumentTest.setRoot('tests')
//
//        // Move the build types to build-types/<type>
//        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
//        // This moves them out of them default location under src/<type>/... which would
//        // conflict with src/ being used by the main source set.
//        // Adding new build types or product flavors should be accompanied
//        // by a similar customization.
//        debug.setRoot('build-types/debug')
//        release.setRoot('build-types/release')
//    }
}

